{
  "name": "phosphor-boxengine",
  "version": "1.0.1",
  "description": "A low-level box layout algorithm.",
  "main": "lib/index.js",
  "typings": "lib/index.d.ts",
  "dependencies": {},
  "devDependencies": {
    "coveralls": "^2.11.4",
    "expect.js": "^0.3.1",
    "istanbul": "^0.3.19",
    "mocha": "^2.2.5",
    "rimraf": "^2.4.2",
    "typedoc": "^0.3.11",
    "typescript": "^1.6.2"
  },
  "scripts": {
    "clean": "rimraf lib && rimraf test/build && rimraf test/coverage",
    "build:src": "tsc --project src",
    "build:test": "tsc --project test/src",
    "build": "npm run build:src && npm run build:test",
    "docs": "rimraf docs/api && typedoc --options scripts/tdoptions.json",
    "prepublish": "npm run build",
    "test": "mocha test/build/index.js",
    "test:coverage": "istanbul cover --dir test/coverage node_modules/mocha/bin/_mocha -- test/build/index.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/phosphorjs/phosphor-boxengine.git"
  },
  "files": [
    "lib/index.js",
    "lib/index.d.ts"
  ],
  "keywords": [
    "box",
    "layout"
  ],
  "author": {
    "name": "S. Chris Colbert",
    "email": "sccolbert@gmail.com"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/phosphorjs/phosphor-boxengine/issues"
  },
  "homepage": "https://github.com/phosphorjs/phosphor-boxengine",
  "readme": "phosphor-boxengine\r\n==================\r\n\r\n[![Build Status](https://travis-ci.org/phosphorjs/phosphor-boxengine.svg)](https://travis-ci.org/phosphorjs/phosphor-boxengine?branch=master)\r\n[![Coverage Status](https://coveralls.io/repos/phosphorjs/phosphor-boxengine/badge.svg?branch=master&service=github)](https://coveralls.io/github/phosphorjs/phosphor-boxengine?branch=master)\r\n\r\nA low-level box layout algorithm.\r\n\r\n[API Docs](http://phosphorjs.github.io/phosphor-boxengine/api/)\r\n\r\n\r\nPackage Install\r\n---------------\r\n\r\n**Prerequisites**\r\n- [node](http://nodejs.org/)\r\n\r\n```bash\r\nnpm install --save phosphor-boxengine\r\n```\r\n\r\n\r\nSource Build\r\n------------\r\n\r\n**Prerequisites**\r\n- [git](http://git-scm.com/)\r\n- [node](http://nodejs.org/)\r\n\r\n```bash\r\ngit clone https://github.com/phosphorjs/phosphor-boxengine.git\r\ncd phosphor-boxengine\r\nnpm install\r\n```\r\n\r\n**Rebuild**\r\n```bash\r\nnpm run clean\r\nnpm run build\r\n```\r\n\r\n\r\nRun Tests\r\n---------\r\n\r\nFollow the source build instructions first.\r\n\r\n```bash\r\nnpm test\r\n```\r\n\r\n\r\nBuild Docs\r\n----------\r\n\r\nFollow the source build instructions first.\r\n\r\n```bash\r\nnpm run docs\r\n```\r\n\r\nNavigate to `docs/index.html`.\r\n\r\n\r\nSupported Runtimes\r\n------------------\r\n\r\nThe runtime versions which are currently *known to work* are listed below.\r\nEarlier versions may also work, but come with no guarantees.\r\n\r\n- Node 0.12.7+\r\n- IE 11+\r\n- Firefox 32+\r\n- Chrome 38+\r\n\r\n\r\nBundle for the Browser\r\n----------------------\r\n\r\nFollow the package install instructions first.\r\n\r\n```bash\r\nnpm install --save-dev browserify\r\nbrowserify myapp.js -o mybundle.js\r\n```\r\n\r\n\r\nUsage Examples\r\n--------------\r\n\r\n**Note:** This module is fully compatible with Node/Babel/ES6/ES5. Simply\r\nomit the type declarations when using a language other than TypeScript.\r\n\r\n```typescript\r\nimport {\r\n  BoxSizer, boxCalc\r\n} from 'phosphor-boxengine';\r\n\r\n\r\n// Setup a simple 3-column arrangement. Normally done via static HTML\r\n// or some form of DOM generation library. Kept simple for this example.\r\nlet host = document.createElement('div');\r\nlet col1 = document.createElement('div');\r\nlet col2 = document.createElement('div');\r\nlet col3 = document.createElement('div');\r\nlet columns = [col1, col2, col3];\r\n\r\nhost.style.position = 'relative';\r\nhost.style.height = '500px';\r\n\r\ncol1.style.position = 'absolute';\r\ncol1.style.top = '0';\r\ncol1.style.bottom = '0';\r\n\r\ncol2.style.position = 'absolute';\r\ncol2.style.top = '0';\r\ncol2.style.bottom = '0';\r\n\r\ncol3.style.position = 'absolute';\r\ncol3.style.top = '0';\r\ncol3.style.bottom = '0';\r\n\r\nhost.appendChild(col1);\r\nhost.appendChild(col2);\r\nhost.appendChild(col3);\r\ndocument.body.appendChild(host);\r\n\r\n\r\n// Create the sizers for the columns.\r\nlet sizer1 = new BoxSizer();\r\nlet sizer2 = new BoxSizer();\r\nlet sizer3 = new BoxSizer();\r\nlet sizers = [sizer1, sizer2, sizer3];\r\n\r\n\r\n// Setup the constraints on the column widths.\r\nsizer1.minSize = 150;\r\nsizer2.maxSize = 250;\r\nsizer2.minSize = 100;\r\nsizer3.minSize = 150;\r\nsizer3.maxSize = 250;\r\n\r\n\r\n// Setup the desired sizes for the columns.\r\nsizer1.sizeHint = 300;\r\nsizer2.sizeHint = 600;\r\nsizer3.sizeHint = 200;\r\n\r\n\r\n// The middle column expands twice as fast as the others.\r\nsizer1.stretch = 1;\r\nsizer2.stretch = 2;\r\nsizer3.stretch = 1;\r\n\r\n\r\n// Layout the columns on each resize event. Note that `boxCalc` only\r\n// handles sizes in the direction of layout (`width` in this case).\r\n// The application decides how to handle the orthogonal dimension.\r\nwindow.onresize = () => {\r\n\r\n  // Compute the new column sizes for the host width.\r\n  boxCalc(sizers, host.offsetWidth);\r\n\r\n  // Layout the columns using the computed sizes.\r\n  let left = 0;\r\n  for (let i = 0; i < sizers.length; ++i) {\r\n    let col = columns[i];\r\n    let sizer = sizers[i];\r\n    col.style.left = left + 'px';\r\n    col.style.width = sizer.size + 'px';\r\n    left += sizer.size;\r\n  }\r\n\r\n};\r\n```\r\n",
  "readmeFilename": "README.md",
  "gitHead": "130d9175b122623975f9f0a85f9ec02e98bcad0d",
  "_id": "phosphor-boxengine@1.0.1",
  "_shasum": "853b0fcfc8e2e1e91b2b3c8b6a99c9f83a89791c",
  "_from": "phosphor-boxengine@1.0.1"
}
