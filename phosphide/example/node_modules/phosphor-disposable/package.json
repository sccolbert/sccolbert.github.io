{
  "name": "phosphor-disposable",
  "version": "1.0.5",
  "description": "A module for expressing the disposable object pattern.",
  "main": "lib/index.js",
  "typings": "lib/index.d.ts",
  "dependencies": {},
  "devDependencies": {
    "coveralls": "^2.11.4",
    "expect.js": "^0.3.1",
    "istanbul": "^0.3.19",
    "mocha": "^2.2.5",
    "rimraf": "^2.4.2",
    "typedoc": "^0.3.11",
    "typescript": "^1.6.2"
  },
  "scripts": {
    "clean": "rimraf lib && rimraf test/build && rimraf test/coverage",
    "build:src": "tsc --project src",
    "build:test": "tsc --project test/src",
    "build": "npm run build:src && npm run build:test",
    "docs": "rimraf docs/api && typedoc --options scripts/tdoptions.json",
    "prepublish": "npm run build",
    "test": "mocha test/build/index.js",
    "test:coverage": "istanbul cover --dir test/coverage node_modules/mocha/bin/_mocha -- test/build/index.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/phosphorjs/phosphor-disposable.git"
  },
  "files": [
    "lib/index.js",
    "lib/index.d.ts"
  ],
  "keywords": [
    "disposable"
  ],
  "author": {
    "name": "S. Chris Colbert",
    "email": "sccolbert@gmail.com"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/phosphorjs/phosphor-disposable/issues"
  },
  "homepage": "https://github.com/phosphorjs/phosphor-disposable",
  "readme": "phosphor-disposable\r\n===================\r\n\r\n[![Build Status](https://travis-ci.org/phosphorjs/phosphor-disposable.svg)](https://travis-ci.org/phosphorjs/phosphor-disposable?branch=master)\r\n[![Coverage Status](https://coveralls.io/repos/phosphorjs/phosphor-disposable/badge.svg?branch=master&service=github)](https://coveralls.io/github/phosphorjs/phosphor-disposable?branch=master)\r\n\r\nA module for expressing the disposable object pattern.\r\n\r\n[API Docs](http://phosphorjs.github.io/phosphor-disposable/api/)\r\n\r\n\r\nPackage Install\r\n---------------\r\n\r\n**Prerequisites**\r\n- [node](http://nodejs.org/)\r\n\r\n```bash\r\nnpm install --save phosphor-disposable\r\n```\r\n\r\n\r\nSource Build\r\n------------\r\n\r\n**Prerequisites**\r\n- [git](http://git-scm.com/)\r\n- [node](http://nodejs.org/)\r\n\r\n```bash\r\ngit clone https://github.com/phosphorjs/phosphor-disposable.git\r\ncd phosphor-disposable\r\nnpm install\r\n```\r\n\r\n**Rebuild**\r\n```bash\r\nnpm run clean\r\nnpm run build\r\n```\r\n\r\n\r\nRun Tests\r\n---------\r\n\r\nFollow the source build instructions first.\r\n\r\n```bash\r\nnpm test\r\n```\r\n\r\n\r\nBuild Docs\r\n----------\r\n\r\nFollow the source build instructions first.\r\n\r\n```bash\r\nnpm run docs\r\n```\r\n\r\nNavigate to `docs/index.html`.\r\n\r\n\r\nSupported Runtimes\r\n------------------\r\n\r\nThe runtime versions which are currently *known to work* are listed below.\r\nEarlier versions may also work, but come with no guarantees.\r\n\r\n- Node 0.12.7+\r\n- IE 11+\r\n- Firefox 32+\r\n- Chrome 38+\r\n\r\n\r\nBundle for the Browser\r\n----------------------\r\n\r\nFollow the package install instructions first.\r\n\r\n```bash\r\nnpm install --save-dev browserify\r\nbrowserify myapp.js -o mybundle.js\r\n```\r\n\r\n\r\nUsage Examples\r\n--------------\r\n\r\n**Note:** This module is fully compatible with Node/Babel/ES6/ES5. Simply\r\nomit the type declarations when using a language other than TypeScript.\r\n\r\n```typescript\r\nimport {\r\n  DisposableDelegate, DisposableSet, IDisposable\r\n} from 'phosphor-disposable';\r\n\r\n\r\n// Convert a function into a disposable.\r\nlet delegate = new DisposableDelegate(() => {\r\n  console.log('disposed');\r\n});\r\n\r\ndelegate.dispose();  // logs: 'disposed'\r\ndelegate.dispose();  // no-op\r\n\r\n\r\n// Create a collection of disposables.\r\nlet d1 = new DisposableDelegate(() => {\r\n  console.log('one');\r\n});\r\n\r\nlet d2 = new DisposableDelegate(() => {\r\n  console.log('two');\r\n});\r\n\r\nlet d3 = new DisposableDelegate(() => {\r\n  console.log('three');\r\n});\r\n\r\nlet set = new DisposableSet([d1, d2, d3]);\r\n\r\nset.dispose();  // logs: 'one', 'two', 'three'\r\nset.dispose();  // no-op\r\n\r\n\r\n// Create a custom disposable.\r\nclass MyDisposable implements IDisposable {\r\n\r\n  constructor(id: string) {\r\n    this._id = id;\r\n  }\r\n\r\n  get isDisposed(): boolean {\r\n    return this._id === null;\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this._id !== null) {\r\n      console.log(this._id);\r\n      this._id = null;\r\n    }\r\n  }\r\n\r\n  private _id: string;\r\n}\r\n\r\nlet foo = new MyDisposable('foo');\r\nlet bar = new MyDisposable('bar');\r\nlet baz = new MyDisposable('baz');\r\n\r\nlet set = new DisposableSet();\r\nset.add(foo);\r\nset.add(bar);\r\nset.add(baz);\r\n\r\nset.dispose();  // logs: 'foo', 'bar', 'baz'\r\nset.dispose();  // no-op\r\n```\r\n",
  "readmeFilename": "README.md",
  "gitHead": "9ce1343b78a36b95fc9e5de8efbbc424bd32d846",
  "_id": "phosphor-disposable@1.0.5",
  "_shasum": "7b64309d36fcf2b1254c064637db538282386597",
  "_from": "phosphor-disposable@1.0.5"
}
